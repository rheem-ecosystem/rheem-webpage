enable: true
title: Features
subtitle: >
  How we tame the jungle for you
content:

  - icon: fas fa-bezier-curve
    name: Cross-platform
    class: col-sm-6 col-md-3
    text: >
      Run a single data analytic task on top of any set of data processing platforms.
    textexpanded: >
      The most salient feature of Rheem is its cross-platform optimizer. Besides deciding the best processing platform to run any incoming task, Rheem can run a single task on multiple processing platforms. Overall, it applies an extensible set of graph transformations to a Rheem plan to find alternative execution plans. Then, it compares all execution plans by using a platform-specific cost model. Cost functions can either be given or learned, and are parameterized with respect to the underlying hardware (e.g., number of computing nodes for distributed operators).

  - icon: fa fa-clock
    name: High-Efficiency
    class: col-sm-6 col-md-3
    text: >
      It selects the best available data processing platform for any incoming query.
    textexpanded: >
       Rheem provides a number of optimized operators and novel query optimization process that allows it to efficiently deal with big (as well as small) datasets. Furthermore, as its data processing abstraction is based on UDFs, Rheem lets applications expose semantic properties about their functions, optimization hints (e.g., numbers of iterations), constraints (e.g., physical collocation of operators), and alternative plans. The optimizer then uses those artifacts where available in a best-effort approach.

  - icon: fa fa-puzzle-piece
    name: Flexibility
    class: col-sm-6 col-md-3
    text: >
      User defined functions (UDFs) as first-class citizens, enabling extensibility and adaptability.
    textexpanded: >
      Rheem provides a set of Rheem operators, which applications use to specify their tasks, as well as a set of execution operators, which processing platform provide to run application tasks. The key aspect is that Rheem provides a flexible operator mapping structure allowing developers to add, modify, or delete mappings among Rheem and execution operators. As a result, developers can also add or remove Rheem and execution operators.

  - icon: fas fa-child
    name: Ease-of-Use
    class: col-sm-6 col-md-3
    text: >
      A simple interface that allows developers to focus only on the logics of their application.
    textexpanded: >
      Rheem exposes a simple Java API to developers whereby they can implement their tasks. Developers focus on the logics of their tasks rather than on low-level details specific to data processing platforms. Figure X shows the Rheem plan for a scalable gradient descent implementation: we clearly see that this tedious implementation task is now much easier!

  - icon: fa fa-piggy-bank
    name: Cost Saving
    class: col-sm-6 col-md-3 col-md-offset-3
    text: >
      Fast development of data analytic applications.
    textexpanded: >
      Users do not have to know the intricacies of the underlying platforms: they focus on the logic of their application only. This not only speeds up the development of applications, but also it is no longer a must to be an expert in big data infrastructures. Rheem takes care of how and on which data processing platforms to deploy your applications.

  - icon: fa fa-code-branch
    name: Open Source
    class: col-sm-6 col-md-3
    text: >
      All code is on GitHub under Apache License.
    textexpanded: >
      Rheem has been open source from its very beginnings and will keep being open source until its very endings. Feel free to download it, try it, and contribute to it. Help us to make it better!
